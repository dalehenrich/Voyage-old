(name 'Voyage-Tests-dkh.6' message 'seed GemStone server-side implementation by copying VOMemoryRepository classes .... strip client side functionality, convert to reduced comflict classes with indexes and queries ... then start thinking in terms of the data store implementation ... ' id '2b91271f-30c4-4a5b-8255-fbfe1963a62c' date '02/11/2016' time '17:03:12' author 'dkh' ancestors ((name 'Voyage-Tests-dkh.5' message 'move VORepositoryTest>>testIsNew to VOMongoTest ... dumb down  VORepositoryTest>>testIsNew ... nested objects are added by serializer ... if needed, I suppose a visitor (sans serialization) could be added to the memory repository implementation if needed ' id '5b6cdb68-cb8b-4623-ad9b-464ed48bd8da' date '02/11/2016' time '04:44:17' author 'dkh' ancestors ((name 'Voyage-Tests-dkh.4' message 'move testSelectManyWithAllKeyword  into mongo tests' id '434c9066-bdc3-4d67-85ca-f9ad780e8ce2' date '02/11/2016' time '12:31:51' author 'dkh' ancestors ((name 'Voyage-Tests-dkh.3' message 'complete translation of tests' id 'd416c202-6889-4b3b-9102-6f984d1b7cdd' date '02/10/2016' time '11:28:45' author 'dkh' ancestors ((name 'Voyage-Tests-dkh.2' message 'gearing up to share VOTestResource as well' id 'd2341d28-6605-4b8b-80a5-7aaa8ede0631' date '02/10/2016' time '23:16:32' author 'dkh' ancestors ((name 'Voyage-Tests-dkh.1' message 'Split VORepositoryTest out so that test case can be shared amongst Memory, Mongo, and GemStone repository tests' id '467b211e-fa29-4790-97d5-8ac420e81d1e' date '02/10/2016' time '11:01:27' author 'dkh' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())